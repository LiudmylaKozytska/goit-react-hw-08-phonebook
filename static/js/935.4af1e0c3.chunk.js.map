{"version":3,"file":"static/js/935.4af1e0c3.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItemStyle.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactListStyle.jsx","components/ContactsList/ContactsList.jsx","components/Filter/FilterStyle.jsx","components/Filter/Filter.jsx","pages/Contacts/ContactsStyled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: space-between;\n\n  border-bottom: 1px solid #eeeeee;\n\n  margin: 6px;\n  padding: 6px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border: none;\n  padding: 5px 6px;\n  border-radius: 50%;\n  background-color: #fff8f8;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #eeeeee;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { alertDeleteContactSuccess } from 'components/Alert/Alert';\nimport { Item, Button } from './ContactItemStyle';\nimport { AiFillDelete } from 'react-icons/ai';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n\n    alertDeleteContactSuccess(name);\n  };\n\n  const generateColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  return (\n    <Item key={id}>\n      <Avatar sx={{ bgcolor: generateColor() }}>{name.substring(0, 2)}</Avatar>\n      {name}: {number}\n      <Button type=\"button\" onClick={handleDelete}>\n        <AiFillDelete size={20} fill=\"#ee4f3c\" />\n      </Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 16px;\n  font-size: 18px;\n  color: #0d161b;\n`;\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport {\n  getContacts,\n  getError,\n  getIsLoading,\n  getFilter,\n} from 'redux/contacts/selectors';\nimport { List } from './ContactListStyle';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const visibleContacts = useSelector(state =>\n    selectVisibleContacts(state, contacts, filter)\n  );\n\n  const sortedContacts = visibleContacts.sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  const capitalizeName = name => {\n    return name.charAt(0).toUpperCase() + name.slice(1);\n  };\n\n  return (\n    <List>\n      {isLoading && !error && <b>Loading...</b>}\n      {error && <p>Oops, something went wrong</p>}\n      {sortedContacts.map(({ id, name, number, onClick }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={capitalizeName(name)}\n          number={number}\n          onClick={() => onClick(id)}\n        />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n  font-size: 24px;\n  color: #0d161b;\n`;\n\nexport const Title = styled.h2`\n  font-family: Pacifico;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 48px;\n  line-height: 52px;\n  letter-spacing: 0.1em;\n  color: #0d161b;\n  margin-bottom: 24px;\n  text-align: center;\n`;\n\nexport const FilterSection = styled.section`\n  background-color: #fff8f8;\n  padding: 32px 16px 16px 0;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #0d161b;\n  border-radius: 20px;\n\n  font-size: 24px;\n  color: #0d161b;\n\n  margin-left: 24px;\n  padding: 4px 16px 4px 24px;\n  background-color: #fff8f8;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Title, FilterSection, Input } from 'components/Filter/FilterStyle';\n\nexport const FilterContacts = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterSection>\n      <Title>Your contacts</Title>\n      <Input\n        type=\"text\"\n        placeholder=\"Find by name...\"\n        onChange={handleFilterChange}\n      ></Input>\n    </FilterSection>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Tittle = styled.h2`\n  font-family: Pacifico;\n  font-size: 100px;\n`;\n\nexport const ContactsSection = styled.div`\n  display: flex;\n  justify-content: space-around;\n\n  background-color: #fff8f8;\n  height: 100vh;\n`;\n\nexport const Image = styled.img`\n  width: 352px;\n  height: 352px;\n  margin-top: 66px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { FilterContacts } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { Tittle, ContactsSection, Image } from 'pages/Contacts/ContactsStyled';\nimport woman from 'images/woman.webp';\nimport { LinearProgress } from '@mui/material';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsSection>\n      <div>\n        <Helmet>\n          <Tittle>Your contacts</Tittle>\n        </Helmet>\n        <FilterContacts />\n        {isLoading ? <LinearProgress /> : <ContactsList />}\n      </div>\n      <Image src={woman} alt=\"woman with phone\" />\n    </ContactsSection>\n  );\n};\n\nexport default Contacts;\n"],"names":["Item","styled","Button","ContactItem","id","name","number","dispatch","useDispatch","Avatar","sx","bgcolor","color","i","Math","floor","random","generateColor","substring","type","onClick","deleteContact","alertDeleteContactSuccess","size","fill","List","ContactsList","contacts","useSelector","getContacts","filter","getFilter","isLoading","getIsLoading","error","getError","sortedContacts","state","selectVisibleContacts","sort","a","b","localeCompare","capitalizeName","charAt","toUpperCase","slice","map","Title","FilterSection","Input","FilterContacts","placeholder","onChange","e","setFilter","target","value","Tittle","ContactsSection","Image","useEffect","fetchContacts","Helmet","LinearProgress","src","woman","alt"],"sourceRoot":""}